{"version":3,"file":"static/js/859.60d99568.chunk.js","mappings":"0NAGMA,EAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAAYF,GAAIA,EAA1D,SACGC,OAKT,IAEAF,EAAWQ,UAAY,CACrBP,GAAIQ,IAAAA,OAAAA,WACJP,MAAOO,IAAAA,OAAAA,YCdT,IAUA,EAVmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,SAAC,EAAD,CAA2BX,GAAIW,EAAMX,GAAIC,MAAOU,EAAMV,OAArCU,EAAMX,W,gKCJhB,SAASY,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BC,EAAAA,EAAAA,MAF1B,OAEUC,EAFV,OAGIH,EAAYG,EAAQC,KAAKC,SAH7B,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,KACC,KAGD,4BACE,4CACCV,IAAY,SAACW,EAAA,EAAD,CAAYhB,OAAQK,S,iCCbvC,IAAIY,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAelC,EAAUmC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOT,EAFTA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAepC,UAAYoC,EAEpBA,I,qBC9CPb,EAAOC,QAAUL,EAAQ,IAARA,I,8BCNnBI,EAAOC,QAFoB","sources":["components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }} id={id}>\n        {title}\n      </Link>\n    </li>\n  );\n};\nexport default MoviesItem;\n\nMoviesItem.protoType = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import MoviesItem from 'components/MoviesItem';\n\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MoviesItem key={movie.id} id={movie.id} title={movie.title} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React, { useEffect, useState } from 'react';\nimport { getTrending } from '../../Services/Api';\nimport MoviesList from 'components/MoviesList';\n\nexport default function Home() {\n  const [trending, setTrending] = useState(null);\n\n  useEffect(() => {\n    async function fethTrending() {\n      try {\n        const resolve = await getTrending();\n        setTrending(resolve.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fethTrending();\n  }, []);\n\n  return (\n    <div>\n      <h1>TRENDING TO DAY</h1>\n      {trending && <MoviesList movies={trending} />}\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesItem","id","title","location","useLocation","to","state","from","protoType","PropTypes","movies","map","movie","Home","useState","trending","setTrending","useEffect","getTrending","resolve","data","results","console","log","message","fethTrending","MoviesList","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}