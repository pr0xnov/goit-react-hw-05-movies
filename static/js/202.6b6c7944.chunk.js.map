{"version":3,"file":"static/js/202.6b6c7944.chunk.js","mappings":"kSAGaA,EAAeC,EAAAA,GAAAA,IAAH,4DAIZC,EAAYD,EAAAA,GAAAA,IAAH,8CAGTE,EAAYF,EAAAA,GAAAA,IAAH,gDAITG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kL,GAWCA,EAAAA,GAAAA,IAAH,0C,QCfD,SAASK,IAAgB,IAAD,EAC7BC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAe,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,eAAiBC,OAAQ,KAEtCC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BC,EAAAA,EAAAA,IAAgBX,GAF1C,OAEUY,EAFV,OAGIR,EAAUQ,EAAQC,MAHtB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACjB,IAEJ,IAIekB,EAIJC,EAIX,OACE,iCACE,6BACE,SAAC,KAAD,CAAMC,GAAIb,EAAV,sBAGDJ,IACC,UAACV,EAAD,YACE,gBACE4B,IAAG,WAAgBlB,EAAOmB,YApB5B,mCAAN,OAA0CnB,EAAOmB,eAqBzCC,IAAKpB,EAAOqB,MACZC,MAAM,WAER,UAAC9B,EAAD,YACE,wBAAKQ,EAAOqB,SACZ,sCAnBCL,EAmBehB,EAAOuB,aAlBxBC,KAAKC,MAAU,GAAJT,IAkBV,SACA,sCACA,uBAAIhB,EAAO0B,YACX,oCACA,kCA3BKX,EA2BSf,EAAOe,OA1BtBA,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,iBA8B1C,UAACrC,EAAD,YACE,SAACC,EAAD,CAAOuB,GAAG,OAAOZ,MAAO,CAAEC,KAAMF,GAAhC,mBAGA,SAACV,EAAD,CAAOuB,GAAG,UAAUZ,MAAO,CAAEC,KAAMF,GAAnC,yBAIF,SAAC,KAAD","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BlockDetails = styled.div`\n  display: flex;\n  padding: 20px;\n`;\nexport const BlockInfo = styled.div`\n  margin-left: 20px;\n`;\nexport const BlocLinks = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Links = styled(NavLink)`\n  color: #000000;\n  margin: 0 0.8rem;\n  font-size: 1.3rem;\n  list-style: none;\n  &.active {\n    border-bottom: 3px solid red;\n    color: red;\n  }\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../Services/Api';\nimport {\n  BlockDetails,\n  BlockInfo,\n  Links,\n  BlocLinks,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { moviesId } = useParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  const back = location?.state?.from || '/';\n\n  useEffect(() => {\n    async function fethMovieDetails() {\n      try {\n        const resolve = await getMovieDetails(moviesId);\n        setMovies(resolve.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fethMovieDetails();\n  }, [moviesId]);\n\n  const viewPoster = () => {\n    return ` https://image.tmdb.org/t/p/w500${movies.poster_path}`;\n  };\n\n  const ganres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const qq = e => {\n    return Math.round(e * 10);\n  };\n\n  return (\n    <>\n      <button>\n        <Link to={back}>goBack</Link>\n      </button>\n\n      {movies && (\n        <BlockDetails>\n          <img\n            src={`${viewPoster(movies.poster_path)}`}\n            alt={movies.title}\n            width=\"240px\"\n          />\n          <BlockInfo>\n            <h2>{movies.title}</h2>\n            <p>Average: {qq(movies.vote_average)} %</p>\n            <h3>overview</h3>\n            <p>{movies.overview}</p>\n            <h4>Genres</h4>\n            <p>{`${ganres(movies.genres)}`}</p>\n          </BlockInfo>\n        </BlockDetails>\n      )}\n      <BlocLinks>\n        <Links to=\"cast\" state={{ from: back }}>\n          Cast\n        </Links>\n        <Links to=\"reviews\" state={{ from: back }}>\n          Reviews\n        </Links>\n      </BlocLinks>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["BlockDetails","styled","BlockInfo","BlocLinks","Links","NavLink","MovieDetails","moviesId","useParams","useState","movies","setMovies","location","useLocation","back","state","from","useEffect","getMovieDetails","resolve","data","console","log","message","fethMovieDetails","genres","e","to","src","poster_path","alt","title","width","vote_average","Math","round","overview","map","genre","name","join"],"sourceRoot":""}