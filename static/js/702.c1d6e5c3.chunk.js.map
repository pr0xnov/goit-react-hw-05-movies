{"version":3,"file":"static/js/702.c1d6e5c3.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }} id={id}>\n        {title}\n      </Link>\n    </li>\n  );\n};\nexport default MoviesItem;\n\nMoviesItem.protoType = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import MoviesItem from 'components/MoviesItem';\n\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MoviesItem key={movie.id} id={movie.id} title={movie.title} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport svg from '../../images/loupe.png';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: tomato;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(${svg});\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearch } from '../../Services/Api';\n\nimport {\n  Header,\n  SearchForm,\n  SearchButton,\n  ButtonLabel,\n  SearchInput,\n} from './Movies.styled';\nimport MoviesList from 'components/MoviesList';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const [moviesName, setMoviesName] = useState(query);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function fethTrending() {\n      try {\n        const resolve = await getSearch(query);\n        setMovies(resolve.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fethTrending();\n  }, [query]);\n\n  const handleNameChange = event => {\n    setMoviesName(event.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: moviesName });\n    if (moviesName === '') {\n      alert('Введите название поиска');\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <SearchForm onSubmit={handleSubmit} onChange={handleNameChange}>\n          <SearchButton type=\"submit\">\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchButton>\n\n          <SearchInput\n            onChange={handleNameChange}\n            value={moviesName}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </SearchForm>\n      </Header>\n      {query && <MoviesList movies={movies} />}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesItem","id","title","location","useLocation","to","state","from","protoType","PropTypes","movies","map","movie","Header","styled","SearchForm","SearchButton","svg","ButtonLabel","SearchInput","Movies","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","moviesName","setMoviesName","useEffect","getSearch","resolve","data","results","console","log","message","fethTrending","handleNameChange","event","target","value","toLowerCase","trim","onSubmit","e","preventDefault","alert","onChange","type","autoComplete","autoFocus","placeholder","MoviesList","Suspense","fallback","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}